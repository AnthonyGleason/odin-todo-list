(()=>{"use strict";var t={772:(t,e,r)=>{r.d(e,{Z:()=>a});var n=r(537),o=r.n(n),c=r(645),i=r.n(c)()(o());i.push([t.id,"*{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\nbody{\n    background-color: gray;\n}\n/* strike out or grey out checklist==true tasks*/","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;AACA;IACI,sBAAsB;AAC1B;AACA,gDAAgD",sourcesContent:["*{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\nbody{\n    background-color: gray;\n}\n/* strike out or grey out checklist==true tasks*/"],sourceRoot:""}]);const a=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var u=0;u<t.length;u++){var d=[].concat(t[u]);n&&i[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),c="/*# ".concat(o," */"),i=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var c={},i=[],a=0;a<t.length;a++){var s=t[a],u=n.base?s[0]+n.base:s[0],d=c[u]||0,p="".concat(u," ").concat(d);c[u]=d+1;var l=r(p),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(f);else{var h=o(f,n);n.byIndex=a,e.splice(a,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var c=n(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var a=r(c[i]);e[a].references--}for(var s=n(t,o),u=0;u<c.length;u++){var d=r(c[u]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}c=s}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var c=r.sourceMap;c&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var c=e[n]={id:n,exports:{}};return t[n](c,c.exports,r),c.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=r(379),e=r.n(t),n=r(795),o=r.n(n),c=r(569),i=r.n(c),a=r(565),s=r.n(a),u=r(216),d=r.n(u),p=r(589),l=r.n(p),f=r(772),h={};function y(t,e,r,n,o,c,i){this.taskName=t,this.desc=e,this.dueDate=r,this.priority=n,this.notes=o,this.checkList=c,this.index=i}function m(){this.buttonContainer=document.querySelector(".sidebar-button-container"),this.addProjectButton=document.querySelector("#add-project-button"),this.addProjectForm=document.querySelector(".sidebar-project"),this.cancelProjectButton=document.querySelector("#cancel-button"),this.submitButton=document.querySelector("#submit-button")}h.styleTagTransform=l(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),e()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals,y.prototype.toggleCheckList=function(){1==this.checkList?this.checkList=!1:this.checkList=!0},y.prototype.updateTaskData=function(t,e,r,n,o,c){this.taskName=t,this.desc=e,this.dueDate=r,this.priority=n,this.notes=o},m.prototype.addButtonListeners=function(){document.querySelectorAll(".project-item-button").forEach((t=>{t.addEventListener("click",(()=>{j.removeProject(t.getAttribute("index")),v.clearProjectDisplay(),v.displayProjects(),console.log(j)}))}))},m.prototype.clearProjectDisplay=function(){document.querySelectorAll(".project-item").forEach((t=>{t.remove()}))},m.prototype.displayProjects=function(){j.projectArray.forEach((t=>{let e=document.createElement("div");e.setAttribute("class","project-item"),e.setAttribute("index",t.index);let r=document.createElement("div");r.setAttribute("class","project-text-div"),r.textContent=t.projectName,r.setAttribute("index",t.index);let n=document.createElement("button");n.textContent="X",n.setAttribute("class","project-item-button"),n.setAttribute("index",t.index),e.appendChild(r),e.appendChild(n),this.buttonContainer.appendChild(e)}))},m.prototype.displayTasks=function(){},m.prototype.toggleForm=function(){"none"==this.addProjectForm.style.display?this.addProjectForm.style.display="block":this.addProjectForm.style.display="none"};let v=new m;function A(t,e,r){this.taskArray=[],this.index=t,this.projectName=e,this.currentProject=r}function b(){this.projectArray=[]}A.prototype.addTask=function(t){this.taskArray.push(t)},A.prototype.removeTask=function(t){this.taskArray.splice(t.index,1),j.updateProjectIndexes()},A.switchCurrentProject=function(t){this.currentProject=!1,t.currentProject=!0},A.prototype.updateTaskIndexes=function(){let t=0;this.taskArray.forEach((e=>{e.index=t,t++}))},b.prototype.addProject=function(t){this.projectArray.push(t)},b.prototype.getCurrentProject=function(){return this.projectArray.filter((t=>1==t.currentProject))},b.prototype.removeProject=function(t){this.projectArray.splice(t,1)},b.prototype.updateProjectIndexes=function(){let t=0;this.projectArray.forEach((e=>{e.index=t,t++}))};let j=new b,g=new A(j.projectArray.length,"default",!0);j.addProject(g),v.displayProjects(),v.addButtonListeners(),console.log(j),v.submitButton.addEventListener("click",(()=>{let t=new A(j.projectArray.length,projectName.value,!1);j.addProject(t),v.clearProjectDisplay(),v.displayProjects(),v.addButtonListeners()})),v.addProjectButton.addEventListener("click",(()=>{v.toggleForm()})),v.cancelProjectButton.addEventListener("click",(()=>{v.toggleForm()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,