(()=>{"use strict";var t={772:(t,e,n)=>{n.d(e,{Z:()=>A});var r=n(537),a=n.n(r),o=n(645),i=n.n(o),s=n(667),c=n.n(s),d=new URL(n(988),n.b),l=i()(a()),u=c()(d);l.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    font-size: 15px;\n}\nbody{\n    background-image: url("+u+');\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-areas: "sidebar content";\n}\n\n/*Content Section*/\n.content{\n    grid-area: content;\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    margin: 1%;\n    padding: 2%;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n}\n.content-title{\n    align-self: center;\n    font-size: 22px;\n    font-weight: bold;\n}\n.new-task-button{\n    align-self: center;\n}\n.task-item{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr 0.5fr;\n    grid-template-rows: 1fr;\n    grid-template-areas:\n    "task-name task-desc task-due-date task-update-button"\n    "task-name task-desc task-due-date task-remove-button";\n    flex-grow: 1;\n    align-items: center;\n    border-style: solid;\n    border-color: rgb(44, 44, 44);\n    border-radius: 10px;\n    padding: 5px;\n    margin: 5px;\n}\n.task-name{\n    grid-area: task-name;\n}\n.task-desc{\n    grid-area: task-desc;\n}\n.task-due-date{\n    grid-area: task-due-date;\n}\n#new-task-form{\n    display: flex;\n}\n#task-desc{\n    flex-grow: 5;\n}\n.task-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.task-button-container button{\n    width: 100%;\n}\n.task-item-container{\n    flex-grow: 1;\n    height: 500px;\n    overflow: scroll;\n}\n\n/*Sidebar section*/\n.sidebar{\n    grid-area: sidebar;\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    margin: 1%;\n    border-radius: 15px;\n    padding: 1%;\n}\n.sidebar-title{\n    align-self: center;\n    font-size: 22px;\n    font-weight: bold;\n}\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: rgb(44, 44, 44);\n    padding: 5px;\n    margin: 5px;   \n}\n.project-name{\n    flex-grow: 1;\n    cursor: pointer;\n}\n.project-item-container{\n    flex-grow: 1;\n    height: 500px;\n    overflow:scroll;\n}\n#new-project-form{\n    display: flex;\n}\n.new-project-button{\n    align-self: center;\n}\n.project-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.project-button-container button{\n    width: 100%;\n}',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,qDAAqD;IACrD,eAAe;AACnB;AACA;IACI,yDAAwD;IACxD,aAAa;IACb,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,sCAAsC;AAC1C;;AAEA,kBAAkB;AAClB;IACI,kBAAkB;IAClB,uCAAuC;IACvC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,wCAAwC;IACxC,uBAAuB;IACvB;;0DAEsD;IACtD,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,YAAY;IACZ,WAAW;AACf;AACA;IACI,oBAAoB;AACxB;AACA;IACI,oBAAoB;AACxB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;AAChB;AACA;IACI,YAAY;IACZ,aAAa;AACjB;AACA;IACI,WAAW;AACf;AACA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;;AAEA,kBAAkB;AAClB;IACI,kBAAkB;IAClB,uCAAuC;IACvC,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,WAAW;AACf;AACA;IACI,YAAY;IACZ,eAAe;AACnB;AACA;IACI,YAAY;IACZ,aAAa;IACb,eAAe;AACnB;AACA;IACI,aAAa;AACjB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,aAAa;AACjB;AACA;IACI,WAAW;AACf",sourcesContent:['*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: Georgia, \'Times New Roman\', Times, serif;\n    font-size: 15px;\n}\nbody{\n    background-image: url(../img/notebook-paper-texture.jpg);\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-areas: "sidebar content";\n}\n\n/*Content Section*/\n.content{\n    grid-area: content;\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    margin: 1%;\n    padding: 2%;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n}\n.content-title{\n    align-self: center;\n    font-size: 22px;\n    font-weight: bold;\n}\n.new-task-button{\n    align-self: center;\n}\n.task-item{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr 0.5fr;\n    grid-template-rows: 1fr;\n    grid-template-areas:\n    "task-name task-desc task-due-date task-update-button"\n    "task-name task-desc task-due-date task-remove-button";\n    flex-grow: 1;\n    align-items: center;\n    border-style: solid;\n    border-color: rgb(44, 44, 44);\n    border-radius: 10px;\n    padding: 5px;\n    margin: 5px;\n}\n.task-name{\n    grid-area: task-name;\n}\n.task-desc{\n    grid-area: task-desc;\n}\n.task-due-date{\n    grid-area: task-due-date;\n}\n#new-task-form{\n    display: flex;\n}\n#task-desc{\n    flex-grow: 5;\n}\n.task-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.task-button-container button{\n    width: 100%;\n}\n.task-item-container{\n    flex-grow: 1;\n    height: 500px;\n    overflow: scroll;\n}\n\n/*Sidebar section*/\n.sidebar{\n    grid-area: sidebar;\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    margin: 1%;\n    border-radius: 15px;\n    padding: 1%;\n}\n.sidebar-title{\n    align-self: center;\n    font-size: 22px;\n    font-weight: bold;\n}\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: rgb(44, 44, 44);\n    padding: 5px;\n    margin: 5px;   \n}\n.project-name{\n    flex-grow: 1;\n    cursor: pointer;\n}\n.project-item-container{\n    flex-grow: 1;\n    height: 500px;\n    overflow:scroll;\n}\n#new-project-form{\n    display: flex;\n}\n.new-project-button{\n    align-self: center;\n}\n.project-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.project-button-container button{\n    width: 100%;\n}'],sourceRoot:""}]);const A=l},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,a,o){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var o={},i=[],s=0;s<t.length;s++){var c=t[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var A=n(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=a(p,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var o=r(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<o.length;i++){var s=n(o[i]);e[s].references--}for(var c=r(t,a),d=0;d<o.length;d++){var l=n(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},988:(t,e,n)=>{t.exports=n.p+"60b20bd39335d5d68974.jpg"}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var t=n(379),e=n.n(t),r=n(795),a=n.n(r),o=n(569),i=n.n(o),s=n(565),c=n.n(s),d=n(216),l=n.n(d),u=n(589),A=n.n(u),p=n(772),m={};m.styleTagTransform=A(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;let b=function(t,e,n,r){this.taskName=t,this.taskDesc=e,this.taskDueDate=n,this.index=r},C=function(t,e,n){this.projectName=t,this.isCurrentProject=e,this.index=n,this.taskArray=[]};C.prototype.addTask=function(t){t.index=this.taskArray.length,this.taskArray.push(t)},C.prototype.removeTask=function(t){this.taskArray.splice(t,1),this.updateTaskIndexes()},C.prototype.updateTaskIndexes=function(){let t=0;this.taskArray.forEach((e=>{e.index=t,t++}))};let f=function(){this.projectArray=[]};f.prototype.addProject=function(t){t.index=this.projectArray.length,this.projectArray.push(t)},f.prototype.getCurrentProject=function(){let t;return this.projectArray.forEach((e=>{1==e.isCurrentProject&&(t=e)})),t},f.prototype.removeProject=function(t){this.projectArray.splice(t,1),this.updateProjectIndexes()},f.prototype.switchCurrentProject=function(t){null==this.getCurrentProject()||(this.getCurrentProject().isCurrentProject=!1),this.projectArray[t].isCurrentProject=!0},f.prototype.updateProjectIndexes=function(){let t=0;this.projectArray.forEach((e=>{e.index=t,t++}))};let h=function(){this.projectItemContainer=document.querySelector(".project-item-container"),this.taskItemContainer=document.querySelector(".task-item-container"),this.contentTitleDiv=document.querySelector(".content-title"),this.cancelNewProjectButton=document.querySelector("#project-cancel-button"),this.submitNewProjectButton=document.querySelector("#project-submit-button"),this.newProjectButton=document.querySelector(".new-project-button"),this.newProjectForm=document.querySelector("#new-project-form"),this.cancelNewTaskButton=document.querySelector("#task-cancel-button"),this.submitNewTaskButton=document.querySelector("#task-submit-button"),this.newTaskButton=document.querySelector(".new-task-button"),this.newTaskForm=document.querySelector("#new-task-form")};h.prototype.init=function(t){this.addEventListeners(t)},h.prototype.addEventListeners=function(t){this.cancelNewProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm(),this.newProjectButton.style.display="block"})),this.submitNewProjectButton.addEventListener("click",(()=>{t.addProject(new C(projectName.value,!1,t.projectArray.length)),this.updateProjectDisplay(t)})),this.newProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm(),this.newProjectButton.style.display="none"})),this.cancelNewTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm(),this.newTaskButton.style.display="block"})),this.submitNewTaskButton.addEventListener("click",(()=>{t.getCurrentProject().addTask(new b(taskName.value,taskDesc.value,taskDueDate.value),t.getCurrentProject().taskArray.length),this.updateTaskDisplay(t)})),this.newTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm(),this.newTaskButton.style.display="none"}))},h.prototype.clearProjectContainer=function(){this.projectItemContainer.innerHTML=""},h.prototype.clearTaskContainer=function(){this.taskItemContainer.innerHTML=""},h.prototype.createProjectItem=function(t,e){let n=document.createElement("div");n.setAttribute("class","project-item");let r=document.createElement("div");r.setAttribute("class","project-name"),r.textContent=t.projectName,r.addEventListener("click",(()=>{e.switchCurrentProject(t.index),this.switchCurrentProject(t.index,e),this.updateTaskDisplay(e)})),t==e.getCurrentProject()&&(n.style.backgroundColor="rgba(14, 20, 14, 0.3)");let a=document.createElement("button");return a.setAttribute("class","project-remove-button"),a.textContent="Remove Project",a.addEventListener("click",(()=>{1==e.projectArray[t.index].isCurrentProject&&(this.clearTaskContainer(),this.contentTitleDiv.textContent="Select a project!"),e.removeProject(t.index),this.updateProjectDisplay(e)})),n.appendChild(r),n.appendChild(a),n},h.prototype.createTaskItem=function(t,e,n){let r=document.createElement("div");r.setAttribute("class","task-item");let a=document.createElement("div");a.setAttribute("class","task-name"),a.textContent=t.taskName;let o=document.createElement("div");o.setAttribute("class","task-desc"),o.textContent=t.taskDesc;let i=document.createElement("div");i.setAttribute("class","task-due-date"),i.textContent=t.taskDueDate;let s=document.createElement("button");s.setAttribute("class","task-update-button"),s.textContent="Update Task",s.addEventListener("click",(()=>{let r=document.querySelectorAll(".task-item")[t.index];r.innerHTML="",this.renderUpdateTaskForm(r,t,e,n)}));let c=document.createElement("button");return c.setAttribute("class","task-remove-button"),c.textContent="Remove Task",c.addEventListener("click",(()=>{e.removeTask(t.index),this.updateTaskDisplay(n)})),r.appendChild(a),r.appendChild(o),r.appendChild(i),r.appendChild(s),r.appendChild(c),r},h.prototype.renderProjectItem=function(t,e){let n=this.createProjectItem(t,e);this.projectItemContainer.appendChild(n)},h.prototype.renderTaskItem=function(t,e,n){this.taskItemContainer.appendChild(this.createTaskItem(t,e,n))},h.prototype.renderUpdateTaskForm=function(t,e,n,r){let a=document.createElement("form");a.setAttribute("id","update-task-form"),a.setAttribute("class","task-item");let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","updatedTaskName"),o.setAttribute("class","task-name"),o.setAttribute("placeholder",e.taskName);let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","updatedTaskDesc"),i.setAttribute("class","task-desc"),i.setAttribute("placeholder",e.taskDesc);let s=document.createElement("input");s.setAttribute("type","date"),s.setAttribute("id","updatedTaskDueDate"),s.setAttribute("class","task-due-date");let c=document.createElement("button");c.setAttribute("type","button"),c.textContent="Update Task",c.addEventListener("click",(t=>{""!=updatedTaskName.value&&(e.taskName=updatedTaskName.value),""!=updatedTaskDesc.value&&(e.taskDesc=updatedTaskDesc.value),""!=updatedTaskDueDate.value&&(e.taskDueDate=updatedTaskDueDate.value),t.srcElement.parentNode.parentNode.replaceChild(this.createTaskItem(e,n,r),a)}));let d=document.createElement("button");d.setAttribute("type","button"),d.textContent="Cancel",d.addEventListener("click",(()=>{this.updateTaskDisplay(r)})),a.appendChild(o),a.appendChild(i),a.appendChild(s),a.appendChild(c),a.appendChild(d),t.parentNode.replaceChild(a,t)},h.prototype.switchCurrentProject=function(t,e){let n=document.querySelectorAll(".project-item");n.forEach((t=>{t.style.backgroundColor=""})),n[t].style.backgroundColor="rgba(14, 20, 14, 0.3)"},h.prototype.toggleNewProjectForm=function(){"none"==this.newProjectForm.style.display?this.newProjectForm.style.display="flex":this.newProjectForm.style.display="none"},h.prototype.toggleNewTaskForm=function(){"none"==this.newTaskForm.style.display?this.newTaskForm.style.display="flex":this.newTaskForm.style.display="none"},h.prototype.updateProjectDisplay=function(t){this.clearProjectContainer(),t.projectArray.forEach((e=>{this.renderProjectItem(e,t)}))},h.prototype.updateTaskDisplay=function(t){this.clearTaskContainer(),this.contentTitleDiv.textContent=t.getCurrentProject().projectName,t.getCurrentProject().taskArray.forEach((e=>{this.renderTaskItem(e,t.getCurrentProject(),t)}))},function(){let t=document.querySelector("body"),e=document.createElement("div");e.setAttribute("class","sidebar");let n=document.createElement("div");n.setAttribute("class","sidebar-title"),n.textContent="Projects";let r=document.createElement("div");r.setAttribute("class","project-item-container");let a=document.createElement("button");a.setAttribute("class","new-project-button"),a.textContent="New Project";let o=document.createElement("form");o.setAttribute("id","new-project-form"),o.setAttribute("class","sidebar-project-form"),o.setAttribute("style","display: none");let i=document.createElement("input");i.setAttribute("id","projectName"),i.setAttribute("type","text"),i.setAttribute("placeholder","Project Name");let s=document.createElement("div");s.setAttribute("class","project-button-container");let c=document.createElement("button");c.setAttribute("id","project-submit-button"),c.setAttribute("class","sidebar-button"),c.setAttribute("type","button"),c.textContent="Submit";let d=document.createElement("button");d.setAttribute("id","project-cancel-button"),d.setAttribute("class","sidebar-button"),d.setAttribute("type","button"),d.textContent="Cancel",t.appendChild(e),e.appendChild(n),e.appendChild(r),e.appendChild(a),e.appendChild(o),o.appendChild(i),o.appendChild(s),s.appendChild(c),s.appendChild(d);let l=document.createElement("div");l.setAttribute("class","content");let u=document.createElement("div");u.setAttribute("class","content-title"),u.textContent="Default Project";let A=document.createElement("div");A.setAttribute("class","task-item-container");let p=document.createElement("button");p.setAttribute("class","new-task-button"),p.textContent="New Task";let m=document.createElement("form");m.setAttribute("id","new-task-form"),m.setAttribute("style","display: none");let b=document.createElement("input");b.setAttribute("type","text"),b.setAttribute("id","taskName"),b.setAttribute("placeholder","Task Name");let C=document.createElement("input");C.setAttribute("type","text"),C.setAttribute("id","taskDesc"),C.setAttribute("placeholder","Task Description");let f=document.createElement("input");f.setAttribute("type","date"),f.setAttribute("id","taskDueDate");let h=document.createElement("div");h.setAttribute("class","task-button-container");let k=document.createElement("button");k.setAttribute("type","button"),k.setAttribute("id","task-submit-button"),k.textContent="Submit";let y=document.createElement("button");y.setAttribute("type","button"),y.setAttribute("id","task-cancel-button"),y.textContent="Cancel",t.appendChild(l),l.appendChild(u),l.appendChild(A),l.appendChild(p),l.appendChild(m),m.appendChild(b),m.appendChild(C),m.appendChild(f),m.appendChild(h),h.appendChild(k),h.appendChild(y)}();let k=new h,y=new f,g=new C("Default Project",!0,y.projectArray.length),x=new b("Default Task","Default Task Description","2022-09-07",g.taskArray.length);k.init(y),g.addTask(x),y.addProject(g),k.updateTaskDisplay(y),k.updateProjectDisplay(y)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,