(()=>{"use strict";var t={772:(t,e,r)=>{r.d(e,{Z:()=>c});var n=r(537),o=r.n(n),a=r(645),i=r.n(a)()(o());i.push([t.id,':root{\n    --colora: #838aeb;\n    --colorb: #ff919c;\n    --colorc: #fff6d1;\n    --colord: #3f3f3f;\n}\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: var(--colord);\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 5fr;\n    grid-template-areas:\n    "header header"\n    "sidebar content";\n}\n\n\n.content{\n    background-color:var(--colorc);\n    grid-area: content;\n    margin: 20px;\n    border-radius: 15px;\n}\n.header{\n    background-color: var(--colorb);\n    grid-area: header;\n    margin: 20px;\n    border-radius: 15px;\n}\n.sidebar{\n    background-color: var(--colora);\n    grid-area: sidebar;\n    margin: 20px;\n    border-radius: 15px;\n}\n.project-item{\n    display: flex;\n}',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,YAAY;IACZ,+BAA+B;IAC/B,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;qBAEiB;AACrB;;;AAGA;IACI,8BAA8B;IAC9B,kBAAkB;IAClB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,kBAAkB;IAClB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB",sourcesContent:[':root{\n    --colora: #838aeb;\n    --colorb: #ff919c;\n    --colorc: #fff6d1;\n    --colord: #3f3f3f;\n}\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: var(--colord);\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 5fr;\n    grid-template-areas:\n    "header header"\n    "sidebar content";\n}\n\n\n.content{\n    background-color:var(--colorc);\n    grid-area: content;\n    margin: 20px;\n    border-radius: 15px;\n}\n.header{\n    background-color: var(--colorb);\n    grid-area: header;\n    margin: 20px;\n    border-radius: 15px;\n}\n.sidebar{\n    background-color: var(--colora);\n    grid-area: sidebar;\n    margin: 20px;\n    border-radius: 15px;\n}\n.project-item{\n    display: flex;\n}'],sourceRoot:""}]);const c=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<t.length;d++){var p=[].concat(t[d]);n&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),r&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=r):p[2]=r),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(o," */"),i=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var a={},i=[],c=0;c<t.length;c++){var s=t[c],d=n.base?s[0]+n.base:s[0],p=a[d]||0,u="".concat(d," ").concat(p);a[d]=p+1;var l=r(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(A);else{var h=o(A,n);n.byIndex=c,e.splice(c,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var a=n(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var s=n(t,o),d=0;d<a.length;d++){var p=r(a[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=s}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var a=e[n]={id:n,exports:{}};return t[n](a,a.exports,r),a.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=r(379),e=r.n(t),n=r(795),o=r.n(n),a=r(569),i=r.n(a),c=r(565),s=r.n(c),d=r(216),p=r.n(d),u=r(589),l=r.n(u),A=r(772),h={};function f(){this.newProjectButton=document.querySelector("#new-project-button"),this.newProjectForm=document.querySelector("#new-project-form"),this.newProjectSubmitButton=document.querySelector("#submit-button"),this.newProjectCancelButton=document.querySelector("#cancel-button"),this.projectItemContainer=document.querySelector("#project-item-container"),this.newTaskButton=document.querySelector("#new-task-button"),this.newTaskForm=document.querySelector("#new-task-form"),this.taskItemContainer=document.querySelector("#task-item-container")}function m(t,e){this.isCurrentProject=e,this.index,this.projectName=t,this.taskArray=[]}function y(){this.projectArray=[]}h.styleTagTransform=l(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=p(),e()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals,f.prototype.addProject=function(t){this.projectItemContainer.appendChild(t)},f.prototype.addTask=function(t){console.log(this.taskItemContainer),console.log(t),this.taskItemContainer.appendChild(t)},f.prototype.addProjectFormListeners=function(t){this.newProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm()})),this.newProjectSubmitButton.addEventListener("click",(()=>{t.addProject(new m(projectName.value,!1),this)})),this.newProjectCancelButton.addEventListener("click",(()=>{this.toggleNewProjectForm()}))},f.prototype.addTaskFormListeners=function(){this.newTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm()}))},f.prototype.createProjectItem=function(t,e){let r=document.createElement("div");r.setAttribute("class","project-item"),r.setAttribute("index",t.index);let n=document.createElement("button");n.setAttribute("class","project-item-button"),n.setAttribute("index",t.index),n.textContent=t.projectName,n.addEventListener("click",(()=>{e.switchProject(t.index)})),r.appendChild(n);let o=document.createElement("button");return o.setAttribute("class","project-remove-button"),o.setAttribute("index",t.index),o.textContent="X",o.addEventListener("click",(()=>{e.removeProject(o.getAttribute("index"),this)})),r.appendChild(o),r},f.prototype.createTaskItem=function(){return document.createElement("div")},f.prototype.clearProjectDisplay=function(){this.projectItemContainer.innerHTML=""},f.prototype.clearTaskDisplay=function(){this.taskItemContainer.innerHTML=""},f.prototype.init=function(t){this.addProjectFormListeners(t),this.addTaskFormListeners()},f.prototype.toggleNewProjectForm=function(){"none"==this.newProjectForm.style.display?this.newProjectForm.style.display="block":this.newProjectForm.style.display="none"},f.prototype.toggleNewTaskForm=function(){"none"==this.newTaskForm.style.display?this.newTaskForm.style.display="block":this.newTaskForm.style.display="none"},f.prototype.updateProjectDisplay=function(t){this.clearProjectDisplay(),t.projectArray.forEach((e=>{this.addProject(this.createProjectItem(e,t))}))},f.prototype.updateTaskDisplay=function(t){this.clearTaskDisplay(),t.taskArray.forEach((e=>{this.addTask(this.createTaskItem(e,t))}))},m.prototype.addTask=function(t,e){t.index=this.taskArray.length,this.pushToArray(t),e.updateTaskDisplay(this)},m.prototype.pushToArray=function(t){this.taskArray.push(t)},m.prototype.removeTask=function(t,e){this.taskArray.splice(t,1),this.updateIndexes(),e.updateTaskDisplay(this)},m.prototype.updateIndexes=function(){let t=0;this.taskArray.forEach((e=>{e.index=t,t++}))},y.prototype.addProject=function(t,e){t.index=this.projectArray.length,this.pushToArray(t),e.updateProjectDisplay(this)},y.prototype.getCurrentProject=function(){let t;return this.projectArray.forEach((e=>{1==e.isCurrentProject&&(t=e)})),t},y.prototype.pushToArray=function(t){this.projectArray.push(t)},y.prototype.removeProject=function(t,e){this.projectArray.splice(t,1),this.updateIndexes(),e.updateProjectDisplay(this)},y.prototype.switchProject=function(t){this.getCurrentProject().isCurrentProject=!1,this.projectArray[t].isCurrentProject=!0},y.prototype.updateIndexes=function(){let t=0;this.projectArray.forEach((e=>{e.index=t,t++}))};let v=new y,b=new f,g=new m("default",!0);b.init(v),v.addProject(g,b),g.addTask(new function(t,e,r,n,o,a,i){this.taskName=1,this.desc=1,this.dueDate=1,this.priority=1,this.notes=1,this.checklist=1,this.index=1}(1,1,1,1,1,1,1),b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,