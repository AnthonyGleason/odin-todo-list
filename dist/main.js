(()=>{"use strict";var t={772:(t,e,n)=>{n.d(e,{Z:()=>u});var r=n(537),o=n.n(r),a=n(645),s=n.n(a),i=n(667),c=n.n(i),l=new URL(n(988),n.b),d=s()(o()),A=c()(l);d.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    background-image: url("+A+');\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n/*Content Section*/\n.content{\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    margin: 1%;\n    padding: 2%;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n}\n.content-title{\n    align-self: center;\n}\n.new-task-button{\n    align-self: center;\n}\n.task-item{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr 0.5fr;\n    grid-template-rows: 1fr;\n    grid-template-areas:\n    "task-name task-desc task-due-date task-update-button"\n    "task-name task-desc task-due-date task-remove-button";\n    flex-grow: 1;\n    align-items: center;\n    border-style: solid;\n    border-color: rgb(44, 44, 44);\n    border-radius: 10px;\n    padding: 5px;\n    margin: 5px;\n}\n.task-name{\n    grid-area: task-name;\n}\n.task-desc{\n    grid-area: task-desc;\n}\n.task-due-date{\n    grid-area: task-due-date;\n}\n#new-task-form{\n    display: flex;\n}\n#task-desc{\n    flex-grow: 5;\n}\n.task-button-container{\n    flex-grow: 1;\n    display: flex;\n    overflow: scroll;\n}\n.task-button-container button{\n    width: 100%;\n}\n.task-item-container{\n    flex-grow: 1;\n}\n\n/*Sidebar section*/\n.sidebar{\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    margin: 3%;\n    border-radius: 15px;\n    padding: 3%;\n}\n.sidebar-title{\n    align-self: center;\n}\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: rgb(44, 44, 44);\n    padding: 5px;\n    margin: 5px;   \n}\n\n.project-item-container{\n    flex-grow: 1;\n    overflow: scroll;\n}\n#new-project-form{\n    display: flex;\n}\n.new-project-button{\n    align-self: center;\n}\n.project-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.project-button-container button{\n    width: 100%;\n}',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,yDAAwD;IACxD,aAAa;IACb,YAAY;IACZ,aAAa;IACb,8BAA8B;AAClC;;AAEA,kBAAkB;AAClB;IACI,uCAAuC;IACvC,YAAY;IACZ,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,kBAAkB;AACtB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,wCAAwC;IACxC,uBAAuB;IACvB;;0DAEsD;IACtD,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,YAAY;IACZ,WAAW;AACf;AACA;IACI,oBAAoB;AACxB;AACA;IACI,oBAAoB;AACxB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;AAChB;AACA;IACI,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB;AACA;IACI,WAAW;AACf;AACA;IACI,YAAY;AAChB;;AAEA,kBAAkB;AAClB;IACI,uCAAuC;IACvC,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI,aAAa;AACjB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,aAAa;AACjB;AACA;IACI,WAAW;AACf",sourcesContent:['*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    background-image: url(../img/notebook-paper-texture.jpg);\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n}\n\n/*Content Section*/\n.content{\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    margin: 1%;\n    padding: 2%;\n    border-radius: 15px;\n    display: flex;\n    flex-direction: column;\n}\n.content-title{\n    align-self: center;\n}\n.new-task-button{\n    align-self: center;\n}\n.task-item{\n    display: grid;\n    grid-template-columns: 1fr 4fr 1fr 0.5fr;\n    grid-template-rows: 1fr;\n    grid-template-areas:\n    "task-name task-desc task-due-date task-update-button"\n    "task-name task-desc task-due-date task-remove-button";\n    flex-grow: 1;\n    align-items: center;\n    border-style: solid;\n    border-color: rgb(44, 44, 44);\n    border-radius: 10px;\n    padding: 5px;\n    margin: 5px;\n}\n.task-name{\n    grid-area: task-name;\n}\n.task-desc{\n    grid-area: task-desc;\n}\n.task-due-date{\n    grid-area: task-due-date;\n}\n#new-task-form{\n    display: flex;\n}\n#task-desc{\n    flex-grow: 5;\n}\n.task-button-container{\n    flex-grow: 1;\n    display: flex;\n    overflow: scroll;\n}\n.task-button-container button{\n    width: 100%;\n}\n.task-item-container{\n    flex-grow: 1;\n}\n\n/*Sidebar section*/\n.sidebar{\n    background-color: rgba(14, 20, 14, 0.8);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    margin: 3%;\n    border-radius: 15px;\n    padding: 3%;\n}\n.sidebar-title{\n    align-self: center;\n}\n.project-item{\n    display: flex;\n    justify-content: space-between;\n    border-style: solid;\n    border-radius: 10px;\n    border-color: rgb(44, 44, 44);\n    padding: 5px;\n    margin: 5px;   \n}\n\n.project-item-container{\n    flex-grow: 1;\n    overflow: scroll;\n}\n#new-project-form{\n    display: flex;\n}\n.new-project-button{\n    align-self: center;\n}\n.project-button-container{\n    flex-grow: 1;\n    display: flex;\n}\n.project-button-container button{\n    width: 100%;\n}'],sourceRoot:""}]);const u=d},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);r&&s[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([a]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var a={},s=[],i=0;i<t.length;i++){var c=t[i],l=r.base?c[0]+r.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=i,e.splice(i,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var a=r(t=t||[],o=o||{});return function(t){t=t||[];for(var s=0;s<a.length;s++){var i=n(a[s]);e[i].references--}for(var c=r(t,o),l=0;l<a.length;l++){var d=n(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},988:(t,e,n)=>{t.exports=n.p+"60b20bd39335d5d68974.jpg"}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return t[r](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var t=n(379),e=n.n(t),r=n(795),o=n.n(r),a=n(569),s=n.n(a),i=n(565),c=n.n(i),l=n(216),d=n.n(l),A=n(589),u=n.n(A),p=n(772),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;let f=function(t,e,n){this.projectName=t,this.isCurrentProject=e,this.index=n,this.taskArray=[]};f.prototype.addTask=function(t){t.index=this.taskArray.length,this.taskArray.push(t)},f.prototype.removeTask=function(t){this.taskArray.splice(t,1),this.updateTaskIndexes()},f.prototype.updateTaskIndexes=function(){let t=0;this.taskArray.forEach((e=>{e.index=t,t++}))};let C=function(){this.projectArray=[]};C.prototype.addProject=function(t){t.index=this.projectArray.length,this.projectArray.push(t)},C.prototype.getCurrentProject=function(){let t;return this.projectArray.forEach((e=>{1==e.isCurrentProject&&(t=e)})),t},C.prototype.removeProject=function(t){this.projectArray.splice(t,1),this.updateProjectIndexes()},C.prototype.switchCurrentProject=function(t){this.getCurrentProject().isCurrentProject=!1,this.projectArray[t].isCurrentProject=!0},C.prototype.updateProjectIndexes=function(){let t=0;this.projectArray.forEach((e=>{e.index=t,t++}))};let h=function(){this.projectItemContainer=document.querySelector(".project-item-container"),this.taskItemContainer=document.querySelector(".task-item-container"),this.cancelNewProjectButton=document.querySelector("#project-cancel-button"),this.submitNewProjectButton=document.querySelector("#project-submit-button"),this.newProjectButton=document.querySelector(".new-project-button"),this.newProjectForm=document.querySelector("#new-project-form"),this.cancelNewTaskButton=document.querySelector("#task-cancel-button"),this.submitNewTaskButton=document.querySelector("#task-submit-button"),this.newTaskButton=document.querySelector(".new-task-button"),this.newTaskForm=document.querySelector("#new-task-form")};h.prototype.init=function(t){this.addEventListeners(t)},h.prototype.addEventListeners=function(t){this.cancelNewProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm(),this.newProjectButton.style.display="block"})),this.submitNewProjectButton.addEventListener("click",(()=>{t.addProject(new f(projectName.value,!1,t.projectArray.length)),this.updateProjectDisplay(t)})),this.newProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm(),this.newProjectButton.style.display="none"})),this.cancelNewTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm(),this.newTaskButton.style.display="block"})),this.submitNewTaskButton.addEventListener("click",(()=>{})),this.newTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm(),this.newTaskButton.style.display="none"}))},h.prototype.clearProjectContainer=function(){this.projectItemContainer.innerHTML=""},h.prototype.clearTaskContainer=function(){this.taskItemContainer.innerHTML=""},h.prototype.renderProjectItem=function(t,e){let n=document.createElement("div");n.setAttribute("class","project-item");let r=document.createElement("div");r.setAttribute("class","project-name"),r.textContent=t.projectName;let o=document.createElement("button");o.setAttribute("class","project-remove-button"),o.textContent="Remove Project",o.addEventListener("click",(()=>{e.removeProject(t.index),this.updateProjectDisplay(e)})),n.appendChild(r),n.appendChild(o),this.projectItemContainer.appendChild(n)},h.prototype.renderTaskItem=function(t,e,n){let r=document.createElement("div");r.setAttribute("class","task-item");let o=document.createElement("div");o.setAttribute("class","task-name"),o.textContent=t.taskName;let a=document.createElement("div");a.setAttribute("class","task-desc"),a.textContent=t.taskDesc;let s=document.createElement("div");s.setAttribute("class","task-due-date"),s.textContent=t.taskDueDate;let i=document.createElement("button");i.setAttribute("class","task-update-button"),i.textContent="Update Task",i.addEventListener("click",(()=>{}));let c=document.createElement("button");c.setAttribute("class","task-remove-button"),c.textContent="Remove Task",c.addEventListener("click",(()=>{e.removeTask(t.index),this.updateTaskDisplay(n)})),r.appendChild(o),r.appendChild(a),r.appendChild(s),r.appendChild(i),r.appendChild(c),this.taskItemContainer.appendChild(r)},h.prototype.toggleNewProjectForm=function(){"none"==this.newProjectForm.style.display?this.newProjectForm.style.display="flex":this.newProjectForm.style.display="none"},h.prototype.toggleNewTaskForm=function(){"none"==this.newTaskForm.style.display?this.newTaskForm.style.display="flex":this.newTaskForm.style.display="none"},h.prototype.updateProjectDisplay=function(t){this.clearProjectContainer(),t.projectArray.forEach((e=>{this.renderProjectItem(e,t)}))},h.prototype.updateTaskDisplay=function(t){this.clearTaskContainer(),t.getCurrentProject().taskArray.forEach((e=>{this.renderTaskItem(e,t.getCurrentProject(),t)}))};let g=new h,b=new C,k=new f("Default Project",!0,b.projectArray.length),y=new function(t,e,n,r){this.taskName="Default Task",this.taskDesc="Default Task Description",this.taskDueDate="09/22/22",this.index=r}("Default Task","Default Task Description","09/22/22",k.taskArray.length);g.init(b),k.addTask(y),b.addProject(k),g.updateTaskDisplay(b),g.updateProjectDisplay(b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,