(()=>{"use strict";var e={772:(e,t,r)=>{r.d(t,{Z:()=>c});var n=r(537),o=r.n(n),a=r(645),i=r.n(a)()(o());i.push([e.id,':root{\n    --colora: #838aeb;\n    --colorb: #ff919c;\n    --colorc: #fff6d1;\n    --colord: #3f3f3f;\n}\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: var(--colord);\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 5fr;\n    grid-template-areas:\n    "header header"\n    "sidebar content";\n}\n\n\n.content{\n    background-color:var(--colorc);\n    grid-area: content;\n    margin: 20px;\n    border-radius: 15px;\n}\n.header{\n    background-color: var(--colorb);\n    grid-area: header;\n    margin: 20px;\n    border-radius: 15px;\n}\n.sidebar{\n    background-color: var(--colora);\n    grid-area: sidebar;\n    margin: 20px;\n    border-radius: 15px;\n}\n.project-item{\n    display: flex;\n}',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,YAAY;IACZ,+BAA+B;IAC/B,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;qBAEiB;AACrB;;;AAGA;IACI,8BAA8B;IAC9B,kBAAkB;IAClB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,iBAAiB;IACjB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,kBAAkB;IAClB,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB",sourcesContent:[':root{\n    --colora: #838aeb;\n    --colorb: #ff919c;\n    --colorc: #fff6d1;\n    --colord: #3f3f3f;\n}\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    height: 100vh;\n    width: 100vw;\n    background-color: var(--colord);\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 5fr;\n    grid-template-areas:\n    "header header"\n    "sidebar content";\n}\n\n\n.content{\n    background-color:var(--colorc);\n    grid-area: content;\n    margin: 20px;\n    border-radius: 15px;\n}\n.header{\n    background-color: var(--colorb);\n    grid-area: header;\n    margin: 20px;\n    border-radius: 15px;\n}\n.sidebar{\n    background-color: var(--colora);\n    grid-area: sidebar;\n    margin: 20px;\n    border-radius: 15px;\n}\n.project-item{\n    display: flex;\n}'],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,n,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(n)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);n&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),a="/*# ".concat(o," */"),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=n.base?s[0]+n.base:s[0],u=a[d]||0,p="".concat(d," ").concat(u);a[d]=u+1;var l=r(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)t[l].references++,t[l].updater(A);else{var f=o(A,n);n.byIndex=c,t.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,o){var a=n(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=r(a[i]);t[c].references--}for(var s=n(e,o),d=0;d<a.length;d++){var u=r(a[d]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=s}}},569:e=>{var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={id:n,exports:{}};return e[n](a,a.exports,r),a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0,(()=>{var e=r(379),t=r.n(e),n=r(795),o=r.n(n),a=r(569),i=r.n(a),c=r(565),s=r.n(c),d=r(216),u=r.n(d),p=r(589),l=r.n(p),A=r(772),f={};function m(e,t){this.isCurrentProject=t,this.index,this.projectName=e,this.taskArray=[]}function h(){this.projectArray=[]}function y(){this.newProjectButton=document.querySelector("#new-project-button"),this.newProjectForm=document.querySelector("#new-project-form"),this.newProjectSubmitButton=document.querySelector("#submit-button"),this.newProjectCancelButton=document.querySelector("#cancel-button"),this.projectItemContainer=document.querySelector("#project-item-container"),this.newTaskButton=document.querySelector("#new-task-button"),this.newTaskForm=document.querySelector("#new-task-form")}f.styleTagTransform=l(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=u(),t()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals,h.prototype.addProject=function(e,t){e.index=this.projectArray.length,this.pushToArray(e),t.updateProjectDisplay(this)},h.prototype.getCurrentProject=function(){let e;return this.projectArray.forEach((t=>{1==t.isCurrentProject&&(e=t)})),e},h.prototype.pushToArray=function(e){this.projectArray.push(e)},h.prototype.removeProject=function(e,t){this.projectArray.splice(e,1),this.updateIndexes(),t.updateProjectDisplay(this)},h.prototype.switchProject=function(e){this.getCurrentProject().isCurrentProject=!1,this.projectArray[e].isCurrentProject=!0},h.prototype.updateIndexes=function(){let e=0;this.projectArray.forEach((t=>{t.index=e,e++}))},y.prototype.addProject=function(e){this.projectItemContainer.appendChild(e)},y.prototype.addProjectFormListeners=function(e){this.newProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm()})),this.newProjectSubmitButton.addEventListener("click",(()=>{e.addProject(new m(projectName.value,!1),this)})),this.newProjectCancelButton.addEventListener("click",(()=>{this.toggleNewProjectForm()}))},y.prototype.addTaskFormListeners=function(){this.newTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm()}))},y.prototype.createProjectItem=function(e,t){let r=document.createElement("div");r.setAttribute("class","project-item"),r.setAttribute("index",e.index);let n=document.createElement("button");n.setAttribute("class","project-item-button"),n.setAttribute("index",e.index),n.textContent=e.projectName,n.addEventListener("click",(()=>{t.switchProject(e.index)})),r.appendChild(n);let o=document.createElement("button");return o.setAttribute("class","project-remove-button"),o.setAttribute("index",e.index),o.textContent="X",o.addEventListener("click",(()=>{t.removeProject(o.getAttribute("index"),this)})),r.appendChild(o),r},y.prototype.clearProjectDisplay=function(){this.projectItemContainer.innerHTML=""},y.prototype.init=function(e){this.addProjectFormListeners(e),this.addTaskFormListeners()},y.prototype.toggleNewProjectForm=function(){"none"==this.newProjectForm.style.display?this.newProjectForm.style.display="block":this.newProjectForm.style.display="none"},y.prototype.toggleNewTaskForm=function(){"none"==this.newTaskForm.style.display?this.newTaskForm.style.display="block":this.newTaskForm.style.display="none"},y.prototype.updateProjectDisplay=function(e){this.clearProjectDisplay(),e.projectArray.forEach((t=>{this.addProject(this.createProjectItem(t,e))}))};let v=new h,b=new y,j=new m("default",!0);b.init(v),v.addProject(j,b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,