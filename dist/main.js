(()=>{"use strict";var t={772:(t,e,r)=>{r.d(e,{Z:()=>s});var n=r(537),o=r.n(n),c=r(645),i=r.n(c)()(o());i.push([t.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    background-color: grey;\n}\n.project-item{\n    display: flex;\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,aAAa;AACjB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    background-color: grey;\n}\n.project-item{\n    display: flex;\n}"],sourceRoot:""}]);const s=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r="",n=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),n&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=t(e),n&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(t,r,n,o,c){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(i[a]=!0)}for(var u=0;u<t.length;u++){var p=[].concat(t[u]);n&&i[p[0]]||(void 0!==c&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=c),r&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=r):p[2]=r),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:t=>{t.exports=function(t){var e=t[1],r=t[3];if(!r)return e;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),c="/*# ".concat(o," */"),i=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[e].concat(i).concat([c]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function r(t){for(var r=-1,n=0;n<e.length;n++)if(e[n].identifier===t){r=n;break}return r}function n(t,n){for(var c={},i=[],s=0;s<t.length;s++){var a=t[s],u=n.base?a[0]+n.base:a[0],p=c[u]||0,d="".concat(u," ").concat(p);c[u]=p+1;var l=r(d),f={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==l)e[l].references++,e[l].updater(f);else{var h=o(f,n);n.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(t,e){var r=e.domAPI(e);return r.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;r.update(t=e)}else r.remove()}}t.exports=function(t,o){var c=n(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<c.length;i++){var s=r(c[i]);e[s].references--}for(var a=n(t,o),u=0;u<c.length;u++){var p=r(c[u]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}c=a}}},569:t=>{var e={};t.exports=function(t,r){var n=function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,r)=>{t.exports=function(t){var e=r.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(r){!function(t,e,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,o&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var c=r.sourceMap;c&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,r)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var c=e[n]={id:n,exports:{}};return t[n](c,c.exports,r),c.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.nc=void 0,(()=>{var t=r(379),e=r.n(t),n=r(795),o=r.n(n),c=r(569),i=r.n(c),s=r(565),a=r.n(s),u=r(216),p=r.n(u),d=r(589),l=r.n(d),f=r(772),h={};function m(t,e){this.isCurrentProject=e,this.index,this.projectName=t,this.taskArray=[]}function y(){this.projectArray=[]}function j(){this.newProjectButton=document.querySelector("#new-project-button"),this.newProjectForm=document.querySelector("#new-project-form"),this.newProjectSubmitButton=document.querySelector("#submit-button"),this.newProjectCancelButton=document.querySelector("#cancel-button"),this.projectItemContainer=document.querySelector("#project-item-container"),this.newTaskButton=document.querySelector("#new-task-button"),this.newTaskForm=document.querySelector("#new-task-form")}h.styleTagTransform=l(),h.setAttributes=a(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=p(),e()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals,y.prototype.addProject=function(t,e){t.index=this.projectArray.length,this.pushToArray(t),e.updateProjectDisplay(this)},y.prototype.getCurrentProject=function(){let t;return this.projectArray.forEach((e=>{1==e.isCurrentProject&&(t=e)})),t},y.prototype.pushToArray=function(t){this.projectArray.push(t)},y.prototype.removeProject=function(t,e){this.projectArray.splice(t,1),this.updateIndexes(),e.updateProjectDisplay(this)},y.prototype.switchProject=function(t){this.getCurrentProject().isCurrentProject=!1,this.projectArray[t].isCurrentProject=!0},y.prototype.updateIndexes=function(){let t=0;this.projectArray.forEach((e=>{e.index=t,t++}))},j.prototype.addProject=function(t){this.projectItemContainer.appendChild(t)},j.prototype.addProjectFormListeners=function(t){this.newProjectButton.addEventListener("click",(()=>{this.toggleNewProjectForm()})),this.newProjectSubmitButton.addEventListener("click",(()=>{t.addProject(new m(projectName.value,!1),this)})),this.newProjectCancelButton.addEventListener("click",(()=>{this.toggleNewProjectForm()}))},j.prototype.addTaskFormListeners=function(){this.newTaskButton.addEventListener("click",(()=>{this.toggleNewTaskForm()}))},j.prototype.createProjectItem=function(t,e){let r=document.createElement("div");r.setAttribute("class","project-item"),r.setAttribute("index",t.index);let n=document.createElement("button");n.setAttribute("class","project-item-button"),n.setAttribute("index",t.index),n.textContent=t.projectName,n.addEventListener("click",(()=>{console.log(e.getCurrentProject()),e.switchProject(t.index),console.log(e.getCurrentProject())})),r.appendChild(n);let o=document.createElement("button");return o.setAttribute("class","project-remove-button"),o.setAttribute("index",t.index),o.textContent="X",o.addEventListener("click",(()=>{e.removeProject(o.getAttribute("index"),this)})),r.appendChild(o),r},j.prototype.clearProjectDisplay=function(){this.projectItemContainer.innerHTML=""},j.prototype.init=function(t){this.addProjectFormListeners(t),this.addTaskFormListeners()},j.prototype.toggleNewProjectForm=function(){"none"==this.newProjectForm.style.display?this.newProjectForm.style.display="block":this.newProjectForm.style.display="none"},j.prototype.toggleNewTaskForm=function(){"none"==this.newTaskForm.style.display?this.newTaskForm.style.display="block":this.newTaskForm.style.display="none"},j.prototype.updateProjectDisplay=function(t){this.clearProjectDisplay(),t.projectArray.forEach((e=>{this.addProject(this.createProjectItem(e,t))}))};let v=new y,A=new j,b=new m("default",!0);A.init(v),v.addProject(b,A)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,